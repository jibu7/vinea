"""Add Order Entry module tables

Revision ID: fdb6cdf1facf
Revises: 5eb09281a38b
Create Date: 2025-06-02 09:31:33.260959

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fdb6cdf1facf'
down_revision: Union[str, None] = '5eb09281a38b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oe_document_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('document_class', sa.String(length=20), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('ar_transaction_type_id', sa.Integer(), nullable=True),
    sa.Column('ap_transaction_type_id', sa.Integer(), nullable=True),
    sa.Column('updates_inventory', sa.Boolean(), nullable=True),
    sa.Column('creates_ar_transaction', sa.Boolean(), nullable=True),
    sa.Column('creates_ap_transaction', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['ap_transaction_type_id'], ['ap_transaction_types.id'], ),
    sa.ForeignKeyConstraint(['ar_transaction_type_id'], ['ar_transaction_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_oe_document_types_id'), 'oe_document_types', ['id'], unique=False)
    op.create_table('purchase_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=20), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('supplier_name', sa.String(length=100), nullable=False),
    sa.Column('supplier_address', sa.Text(), nullable=True),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('tax_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('discount_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('net_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('supplier_ref', sa.String(length=50), nullable=True),
    sa.Column('delivery_date', sa.DateTime(), nullable=True),
    sa.Column('delivery_address', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['document_type_id'], ['oe_document_types.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_number')
    )
    op.create_index(op.f('ix_purchase_orders_id'), 'purchase_orders', ['id'], unique=False)
    op.create_table('sales_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=20), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('customer_address', sa.Text(), nullable=True),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('tax_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('discount_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('net_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('customer_po_number', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['document_type_id'], ['oe_document_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_number')
    )
    op.create_index(op.f('ix_sales_orders_id'), 'sales_orders', ['id'], unique=False)
    op.create_table('goods_received_vouchers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grv_number', sa.String(length=20), nullable=False),
    sa.Column('grv_date', sa.DateTime(), nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('supplier_name', sa.String(length=100), nullable=False),
    sa.Column('delivery_note_number', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('received_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('inventory_posted', sa.Boolean(), nullable=True),
    sa.Column('inventory_posted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_type_id'], ['oe_document_types.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], ),
    sa.ForeignKeyConstraint(['received_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('grv_number')
    )
    op.create_index(op.f('ix_goods_received_vouchers_id'), 'goods_received_vouchers', ['id'], unique=False)
    op.create_table('purchase_order_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_code', sa.String(length=30), nullable=False),
    sa.Column('item_description', sa.String(length=200), nullable=False),
    sa.Column('quantity', sa.DECIMAL(precision=15, scale=3), nullable=False),
    sa.Column('unit_price', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('discount_percent', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('tax_percent', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('line_total', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('discount_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('tax_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('net_amount', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('received_quantity', sa.DECIMAL(precision=15, scale=3), nullable=True),
    sa.Column('gl_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gl_account_id'], ['gl_accounts.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_purchase_order_lines_id'), 'purchase_order_lines', ['id'], unique=False)
    op.create_table('sales_order_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sales_order_id', sa.Integer(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_code', sa.String(length=30), nullable=False),
    sa.Column('item_description', sa.String(length=200), nullable=False),
    sa.Column('quantity', sa.DECIMAL(precision=15, scale=3), nullable=False),
    sa.Column('unit_price', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('discount_percent', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('tax_percent', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('line_total', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('discount_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('tax_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('net_amount', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('gl_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gl_account_id'], ['gl_accounts.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['sales_order_id'], ['sales_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sales_order_lines_id'), 'sales_order_lines', ['id'], unique=False)
    op.create_table('grv_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grv_id', sa.Integer(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('po_line_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_code', sa.String(length=30), nullable=False),
    sa.Column('item_description', sa.String(length=200), nullable=False),
    sa.Column('ordered_quantity', sa.DECIMAL(precision=15, scale=3), nullable=False),
    sa.Column('received_quantity', sa.DECIMAL(precision=15, scale=3), nullable=False),
    sa.Column('unit_price', sa.DECIMAL(precision=15, scale=2), nullable=False),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('quality_status', sa.String(length=20), nullable=True),
    sa.Column('quality_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['grv_id'], ['goods_received_vouchers.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['po_line_id'], ['purchase_order_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grv_lines_id'), 'grv_lines', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_grv_lines_id'), table_name='grv_lines')
    op.drop_table('grv_lines')
    op.drop_index(op.f('ix_sales_order_lines_id'), table_name='sales_order_lines')
    op.drop_table('sales_order_lines')
    op.drop_index(op.f('ix_purchase_order_lines_id'), table_name='purchase_order_lines')
    op.drop_table('purchase_order_lines')
    op.drop_index(op.f('ix_goods_received_vouchers_id'), table_name='goods_received_vouchers')
    op.drop_table('goods_received_vouchers')
    op.drop_index(op.f('ix_sales_orders_id'), table_name='sales_orders')
    op.drop_table('sales_orders')
    op.drop_index(op.f('ix_purchase_orders_id'), table_name='purchase_orders')
    op.drop_table('purchase_orders')
    op.drop_index(op.f('ix_oe_document_types_id'), table_name='oe_document_types')
    op.drop_table('oe_document_types')
    # ### end Alembic commands ###
