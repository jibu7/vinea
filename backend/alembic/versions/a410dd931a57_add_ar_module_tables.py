"""Add AR module tables

Revision ID: a410dd931a57
Revises: 5e9d16cd8ecc
Create Date: 2025-06-01 22:16:25.344571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a410dd931a57'
down_revision: Union[str, None] = '5e9d16cd8ecc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gl_transaction_types',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gl_transaction_types_id'), 'gl_transaction_types', ['id'], unique=False)
    op.create_table('ar_transaction_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('ar_control_account_id', sa.Integer(), nullable=True),
    sa.Column('revenue_account_id', sa.Integer(), nullable=True),
    sa.Column('affects_balance', sa.String(length=10), nullable=False),
    sa.Column('is_payment', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['ar_control_account_id'], ['gl_accounts.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['revenue_account_id'], ['gl_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ar_transaction_types_id'), 'ar_transaction_types', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('customer_code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.JSON(), nullable=True),
    sa.Column('contact_info', sa.JSON(), nullable=True),
    sa.Column('payment_terms', sa.Integer(), nullable=True),
    sa.Column('credit_limit', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('current_balance', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('ar_account_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['ar_account_id'], ['gl_accounts.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('ar_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type_id', sa.Integer(), nullable=False),
    sa.Column('transaction_number', sa.String(length=50), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('allocated_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('is_posted', sa.Boolean(), nullable=True),
    sa.Column('is_allocated', sa.Boolean(), nullable=True),
    sa.Column('posted_by', sa.Integer(), nullable=True),
    sa.Column('posted_at', sa.DateTime(), nullable=True),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.Column('source_module', sa.String(length=20), nullable=True),
    sa.Column('source_document_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['accounting_periods.id'], ),
    sa.ForeignKeyConstraint(['posted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['transaction_type_id'], ['ar_transaction_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ar_transactions_id'), 'ar_transactions', ['id'], unique=False)
    op.create_table('ar_allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('from_transaction_id', sa.Integer(), nullable=False),
    sa.Column('to_transaction_id', sa.Integer(), nullable=False),
    sa.Column('allocated_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('allocated_by', sa.Integer(), nullable=True),
    sa.Column('allocated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['allocated_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_transaction_id'], ['ar_transactions.id'], ),
    sa.ForeignKeyConstraint(['to_transaction_id'], ['ar_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ar_allocations_id'), 'ar_allocations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ar_allocations_id'), table_name='ar_allocations')
    op.drop_table('ar_allocations')
    op.drop_index(op.f('ix_ar_transactions_id'), table_name='ar_transactions')
    op.drop_table('ar_transactions')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_ar_transaction_types_id'), table_name='ar_transaction_types')
    op.drop_table('ar_transaction_types')
    op.drop_index(op.f('ix_gl_transaction_types_id'), table_name='gl_transaction_types')
    op.drop_table('gl_transaction_types')
    # ### end Alembic commands ###
